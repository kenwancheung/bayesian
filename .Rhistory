sim.v <- sapply(sim.age, function(z) sample(c("smoke.yes", "smoke.no"),1, replace=T,
prob = vMarginal.smoke) )
sim.v
sim.age
vMarginal.smoke
set.seed(284)
sim.w <- apply(cbind(sim.age, sim.v),1,
function(z) sample(c("dead.yes", "dead.no"), 1, replace=T,
prob=femdata.joint.p[z[2], z[1], ]))
sim.w
cbind(sim.age, sim.v)
femdata.joint.p
femdata.joint.p[z[2]
, z[1], ]
femdata.joint.p
uMarginal.dead
cond.w.given.uAlive.vSmoke
head(simulatedData, 25)
simulatedData <- cbind(sim.age, sim.v, sim.w)
rownames(simulatedData) <- 1:100
head(simulatedData, 25)
theta1 = .0228
tau1 = .94
theta0 = 1-theta1
tau0 = .98
theta1 * tau1
theta1 * tau1 / (theta1 * tau1 + theta0 * tau0)
theta0
theta0
theta0
#prior
P_theta1 = .0228
# sensitivity p(tau1 | theta1)
P_tau1_theta1 = .94
#theta 0
theta0 = 1-theta1
# specificity p(tau0 | theta0)
p_tau0 = .98
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
p_tau1_theta0
#prior
P_theta1 = .0228
# sensitivity p(tau1 | theta1)
P_tau1_theta1 = .94
#theta 0
theta0 = 1-theta1
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
p_theta1_tau1 * P_theta1
p_theta1_tau1
P_tau1_theta1 * P_theta1
#theta 0
P_theta0 = 1-P_theta1
p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau0_theta0 * P_theta0)
)
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau0_theta0 * P_theta0))
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau0_theta0 * P_theta0)))
)
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau0_theta0 * P_theta0)))
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau1_theta0 * P_theta0)))
pDisease = p_theta1_tau1
p_tau0_theta0 = 1 - p_theta1_tau1
p_tau0_theta0
pDisease
p_theta1_tau0 = p_tau0_theta0 * pDisease
p_theta1_tau0 = p_tau0_theta0 * pDisease / (p_tau0_theta0 * pDisease + p_tau1_theta0 * pDisease)
(p_theta1_tau0 = p_tau0_theta0 * pDisease / (p_tau0_theta0 * pDisease + p_tau1_theta0 * pDisease))
(p_theta1_tau0 = p_tau0_theta0 * pDisease / (p_tau0_theta0 * pDisease + p_tau1_theta0 * 1-pDisease))
(p_theta1_tau0 = p_tau0_theta0 * pDisease / (p_tau0_theta0 * pDisease + p_tau1_theta0 * (1-pDisease)))
(1.0-p.tau1.theta1) * pDisease
P_tau1_theta1
p_tau0_theta0
(1.0-P_tau1_theta1)
pDisease
P_tau1_theta1
p_tau0_theta0
P_tau1_theta1
1.0-P_tau1_theta1
(1-P_tau1_theta1)
(1-P_tau1_theta1) * pDisease
(1-P_tau1_theta1) * pDisease
pDisease
(p_theta1_tau0 = (1-P_tau1_theta1) * pDisease / (p_tau0_theta0 * (1-pDisease) + p_tau1_theta0 * (pDisease)))
(p_tau0_theta0 * (1-pDisease) + p_tau1_theta0*pDisease)
(p_theta1_tau0 = (1-P_tau1_theta1) * pDisease / (p_tau0_theta0 * (1-pDisease) + p_tau1_theta0*pDisease))
(1.0-P_tau1_theta1) * pDisease
(1-P_tau1_theta1) * pDisease
p.tau1.theta1
p_tau1_theta1
(1.0-P_tau1_theta1)
p_tau0_theta0
p_tau0_theta1
p_tau1_theta0
p_tau0_theta0
p_tau1_theta0
P_theta0
p_tau1_theta0
p_tau0_theta1 = 1 - P_tau1_theta1
p_tau0_theta1
P_tau1_theta1 * pDisease
(1.0-P_tau1_theta1) * pDisease
P_tau1_theta1
p_tau0_theta1
P_tau0_theta1 * pDisease
P_tau0_theta1
#prior
P_theta1 = .0228
P_theta0 = 1-P_theta1
# sensitivity p(tau1 | theta1)
P_tau1_theta1 = .94
p_tau0_theta1 = 1 - P_tau1_theta1
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau1_theta0 * P_theta0)))
pDisease = p_theta1_tau1
p_tau0_theta0
#prior
P_theta1 = .0228
P_theta0 = 1-P_theta1
# sensitivity p(tau1 | theta1)
P_tau1_theta1 = .94
p_tau0_theta1 = 1 - P_tau1_theta1
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
(p_theta1_tau1 = P_tau1_theta1 * P_theta1 / ((P_tau1_theta1 * P_theta1) + (p_tau1_theta0 * P_theta0)))
pDisease = p_theta1_tau1
P_tau0_theta1
p_tau0_theta1 = 1 - P_tau1_theta1
P_tau0_theta1
#prior
p_theta1 = .0228
p_theta0 = 1-P_theta1
# sensitivity p(tau1 | theta1)
p_tau1_theta1 = .94
p_tau0_theta1 = 1 - P_tau1_theta1
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
(p_theta1_tau1 = p_tau1_theta1 * p_theta1 / ((p_tau1_theta1 * p_theta1) + (p_tau1_theta0 * p_theta0)))
pDisease = p_theta1_tau1
p_tau0_theta1 * pDisease
#prior
p_theta1 = .0228
p_theta0 = 1-p_theta1
# sensitivity p(tau1 | theta1)
p_tau1_theta1 = .94
p_tau0_theta1 = 1 - p_tau1_theta1
# specificity p(tau0 | theta0)
p_tau0_theta0 = .98
p_tau1_theta0 = 1 - p_tau0_theta0
(p_theta1_tau1 = p_tau1_theta1 * p_theta1 / ((p_tau1_theta1 * p_theta1) + (p_tau1_theta0 * p_theta0)))
pDisease = p_theta1_tau1
p_tau0_theta1 * pDisease
(p_theta1_tau0 = (p_tau0_theta1 * pDisease / (p_tau0_theta1 * p_theta1 + p_tau0_theta0 * p_theta0)
)
(p_theta1_tau0 = (p_tau0_theta1 * pDisease / (p_tau0_theta1 * p_theta1 + p_tau0_theta0 * p_theta0))
)
)
(p_theta1_tau0 = (p_tau0_theta1 * pDisease / (p_tau0_theta1 * p_theta1 + p_tau0_theta0 * p_theta0)))
p_theta0
pnoDisease = 1-pDisease
(p_theta1_tau0 = (p_tau0_theta1 * pDisease / (p_tau0_theta1 * p_theta1 + p_tau0_theta0 * pnoDisease)))
suppressWarnings(library(faraway))
data(babyfood)
babyfood
joint.dist<-data
joint.dist[1:2,1:2]<-joint.dist[1:2,1:2]/sum(joint.dist[1:2,1:2])
joint.dist
joint.dist<-data
joint.dist[1:2,1:2]<-joint.dist[1:2,1:2]/sum(joint.dist[1:2,1:2])
(data<-babyfood[c(1,3),c(1:2,4)])
joint.dist<-data
joint.dist[1:2,1:2]<-joint.dist[1:2,1:2]/sum(joint.dist[1:2,1:2])
joint.dist
joint.dist[2,]
sum(joint.dist[2,])
sum(joint.dist[2,1:2])
p_breast = sum(joint.dist[2,1:2])
p_disease = sum(joint.dist[,1])
p_disease
joint.dist[1,2]
joint.dist
p_breast_disease = joint.dist[2,1]/p_disease
p_breast_disease
p_breast_disease*p_disease / p_breast
p_disease_breast = p_breast_disease*p_disease / p_breast
p_disease_breast
p_breast_disease
joint.dist
#graphics.off()
dataPath = '../DBDA2Eprograms/'
suppressWarnings(source(paste(dataPath,"DBDA2E-utilities.R",sep="/")))
paste(dataPath,"BernGrid.R",sep="/"))
paste(dataPath,"BernGrid.R",sep="/")
suppressWarnings(source(paste(dataPath,"BernGrid.R",sep="/")))
getwd()
setwd("D:/datascience/bayesian/")
suppressWarnings(source("BernGrid.R"))
suppressWarnings(source("DBDA2Eprograms/BernGrid.R"))
(Theta = seq( 0 , 1 , length=5 ))  # Sparse teeth for Theta.
pTheta = pmin( Theta , 1-Theta ) # Triangular shape for pTheta.
(pTheta = pTheta/sum(pTheta))      # Make pTheta sum to 1.0
Data = c(rep(0,0),rep(1,1))      # Single flip with 1 head
Data
Theta
pTheta
pmin( Theta , 1-Theta ) # Triangular shape for pTheta.
Data
Theta^Data*(1-Theta)^(1-Data)
likelihood = Theta^Data*(1-Theta)^(1-Data)
post = pTheta*likelihood
post = post/sum(post)
(posterior = BernGrid( Theta, pTheta , Data , plotType="Bars" ,
showCentTend="None" , showHDI=FALSE , showpD=FALSE ))
Theta = seq( 0 , 1 , length=1001 )  # Fine teeth for Theta.
pTheta = pmin( Theta , 1-Theta ) # Triangular shape for pTheta.
pTheta = pTheta/sum(pTheta)      # Make pTheta sum to 1.0
Data = c(rep(0,3),rep(1,1))      # 25% heads, N=4
Theta
pTheta
pTheta
Data
likelihood=Theta^Data*(1-Theta)^4-sum(Data))
sum(Data)
(likelihood=Theta^Data*(1-Theta)^4-sum(Data))
post = likelihood*pTheta
post
post=post/sum(post)
posterior = BernGrid( Theta, pTheta , Data , plotType="Bars" ,
showCentTend="Mode" , showHDI=TRUE , showpD=FALSE )
posterior = BernGrid( Theta, pTheta , Data , plotType="Bars" ,
showCentTend="Mode" , showHDI=TRUE , showpD=FALSE )
posterior = BernGrid( Theta, pTheta , Data , plotType="Bars" ,
showCentTend="Mode" , showHDI=FALSE , showpD=FALSE )
likeli<-function(par,data){
sdata<-sum(data)
ldata<-length(data)
return(par^sdata*(1-par)^(ldata-sdata))
}
Theta = seq( .00001 , 1 -.00001, length=1001 ) # Fine teeth for Theta.
pTheta = rep(1,length(Theta))      # Uniform (horizontal) shape for pTheta.
pTheta = pTheta/sum(pTheta)        # Make pTheta sum to 1.0
pTheta
pTheta
set.seed(5)
(Data<-rbinom(5,size=1,prob=.84))
set.seed(15)
sample(1:length(Theta),500,replace = T)
length(Theta)
priorInd
priorSample
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample
priorSample
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
priorSample
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
priorSample
priorSample
c(head(Theta,1),head(pTheta,1))
c(tail(Theta,1),tail(pTheta,1))
sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
priorSample
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
likelihoodVector
priorSample[,"Theta"]
likelihoodVector
postVector<-priorSample[,"Prob"]*likelihoodVector
pTheta
head(pTheta)
pTheta
priorSample
Theta
Theta[priorInd]
sample(1:length(Theta),500,replace = T)
sample(1:length(Theta),500,replace = T)
sample(1:length(Theta),500,replace = T)
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
approxfun
approxfun(priorSample[,"Theta"],postVector,method="linear")
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr
postDistr(Theta)
Theta%*%postDistr(Theta)/sum(postDistr(Theta))
set.seed(25)
postDistr(Theta)
postDistr(Theta)
postDistr(Theta)/sum(postDistr(Theta))
pTheta<-postDistr(Theta)/sum(postDistr(Theta))
(Data<-rbinom(5,size=1,prob=.84))
set.seed(35)
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
library(faraway)
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
set.seed(81)
(data1<-rbinom(10,1,.71))
head(data1)
set.seed(81)
(data1<-rbinom(10,1,.71))
set.seed(81)
(data1<-rbinom(10,1,.71))
Theta = seq( .00001 , 1 -.00001, length=1001 ) # Fine teeth for Theta.
pTheta = rep(1,length(Theta))      # Uniform (horizontal) shape for pTheta.
pTheta = pTheta/sum(pTheta)        # Make pTheta sum to 1.0
pTheta
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
priorInd
cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr(Theta)
postDistr1<-postDistr(Theta)
(mode1<-Theta[which.max(postDistr(Theta))])
(mean1<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var1<-((Theta-mean1)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
set.seed(97)
pTheta<-postDistr(Theta)/sum(postDistr(Theta))
(Data<-rbinom(5,size=1,prob=.84))
# new data generation
(data2<-rbinom(10,1,.71))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr(Theta)
postDistr2<-postDistr(Theta)
postDistr2<-postDistr(Theta)
(mode2<-Theta[which.max(postDistr2(Theta))])
(mean2<-Theta%*%postDistr(Theta)/sum(postDistr2(Theta)))
(var2<-((Theta-mean2)^2)%*%postDistr(Theta)/sum(postDistr2(Theta)))
postDistr2<-postDistr(Theta)
(mode2<-Theta[which.max(postDistr2(Theta))])
(mode2<-Theta[which.max(postDistr(Theta))])
(mean2<-Theta%*%postDistr(Theta)/sum(postDistr2(Theta)))
(mean2<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var2<-((Theta-mean2)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
priorSample[,"Prob"]
priorSample
likelihoodVector
likeli
priorInd
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
Data
sapply(priorSample[,"Theta"],function(z) likeli(z,Data2))
# new data generation
(data2<-rbinom(10,1,.71))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,data2))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr3<-postDistr(Theta)
postDistr3<-postDistr(Theta)
postDistr3
(mode3<-Theta[which.max(postDistr(Theta))])
(mean3<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var3<-((Theta-mean3)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
pTheta<-postDistr(Theta)/sum(postDistr(Theta))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,data1))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr4<-postDistr(Theta)
(mode4<-Theta[which.max(postDistr(Theta))])
(mean4<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var4<-((Theta-mean4)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr1<-postDistr(Theta)
(mode1<-Theta[which.max(postDistr(Theta))])
(mean1<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var1<-((Theta-mean1)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
set.seed(97)
pTheta<-postDistr(Theta)/sum(postDistr(Theta))
# new data generation
(data2<-rbinom(10,1,.71))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,Data))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr2<-postDistr(Theta)
(mode2<-Theta[which.max(postDistr(Theta))])
(mean2<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var2<-((Theta-mean2)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,data2))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr3<-postDistr(Theta)
(mode3<-Theta[which.max(postDistr(Theta))])
(mean3<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var3<-((Theta-mean3)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
pTheta<-postDistr(Theta)/sum(postDistr(Theta))
priorInd<-sample(1:length(Theta),500,replace = T)
priorSample<-cbind(Theta=Theta[priorInd],Prob=pTheta[priorInd])
priorSample<-rbind(priorSample,
c(head(Theta,1),head(pTheta,1)),
c(tail(Theta,1),tail(pTheta,1)))
likelihoodVector<-sapply(priorSample[,"Theta"],function(z) likeli(z,data1))
plot(priorSample[,"Theta"],likelihoodVector)
postVector<-priorSample[,"Prob"]*likelihoodVector
postVector<-postVector/sum(postVector)
plot(priorSample[,"Theta"],postVector)
postDistr<-approxfun(priorSample[,"Theta"],postVector,method="linear")
plot(priorSample[,"Theta"],postVector)
lines(Theta,postDistr(Theta),col="red",lwd=2)
postDistr4<-postDistr(Theta)
(mode4<-Theta[which.max(postDistr(Theta))])
(mean4<-Theta%*%postDistr(Theta)/sum(postDistr(Theta)))
(var4<-((Theta-mean4)^2)%*%postDistr(Theta)/sum(postDistr(Theta)))
cbind(mode2,mean2,var2)
cbind(mode = mode2,mean = mean2,var = var2)
data.frame(mode = mode2,mean = mean2,var = var2)
rbind(data.frame(mode = mode2,mean = mean2,var = var2),data.frame(mode=mode4,mean = mean4, var = var4)
)
final_comp = rbind(data.frame(mode = mode2,mean = mean2,var = var2),data.frame(mode=mode4,mean = mean4, var = var4))
sapply(priorSample[,"Theta"],function(z) likeli(z,data1))
data1
z
priorSample[,"Theta"]
likelihoodVector
