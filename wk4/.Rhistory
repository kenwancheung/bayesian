knitr::opts_chunk$set(echo = TRUE)
library(rjags)
dataPath = "/Users/kenwancheung/Documents/msca/bayesian/"
suppressWarnings(source(paste(dataPath,"DBDA2Eprograms/DBDA2E-utilities.R",sep="/")))
getwd()
dataPath = "D:/datascience/bayesian/"
suppressWarnings(source(paste(dataPath,"DBDA2Eprograms/DBDA2E-utilities.R",sep="/")))
myData = read.csv("MScA_32014_BayesianMethods_CourseProjectData")
myData = read.csv("wk4/MScA_32014_BayesianMethods_CourseProjectData")
getwd()
myData = read.csv(paste0(datapath,"wk4/MScA_32014_BayesianMethods_CourseProjectData")
)
dataPath = "D:/datascience/bayesian/"
myData = read.csv(paste0(datapath,"wk4/MScA_32014_BayesianMethods_CourseProjectData"))
myData = read.csv(paste0(dataPath,"wk4/MScA_32014_BayesianMethods_CourseProjectData"))
myData = read.csv(paste0(dataPath,"wk4/MScA_32014_BayesianMethods_CourseProjectData.csv"))
head(myData)
dim(myData)
sum(myData$y)
modelString="
model {
for (i in 1:Ntotal) {
y[i]~dbern(theta)
}
theta~dbeta(1,1)
}
"
modelString="
model {
for (i in 1:length(myData$y)) {
y[i]~dbern(theta)
}
theta~dbeta(1,1)
}
"
# model init
modelString="
model {
for (i in 1:length(myData$y)) {
y[i]~dbern(theta)
}
theta~dbeta(1,1)
}
"
writeLines(modelString,con="Tempmodel.txt")
writeLines(modelString,con=paste0(dataPath,"Tempmodel.txt",sep="/")
)
writeLines(modelString,con=paste0(dataPath,"wk4/Tempmodel.txt",sep="/"))
writeLines(modelString,con=paste0(dataPath,"wk4/Tempmodel.txt"))
MLE<-sum(y)/Ntotal
init1<-MLE
init2<-MLE*(1+.01)
init3<-MLE*(1-.01)
(init1<-MLE)
(init2<-MLE*(1+.01))
MLE=sum(y)/Ntotal
MLE=sum(myData$y)/Ntotal
MLE=sum(myData$y)/length(myData$y)
(init1<-MLE)
(init2<-MLE*(1+.01))
(init3<-MLE*(1-.01))
# fx
initsList<-function(){
thetaInit<-sample(c(init1,init2,init3),1,replace=T)
return(list(theta=thetaInit))
}
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
sample(c(init1,init2,init3),1,replace=T)
initsList()
(dataList<-list(y=y,Ntotal=Ntotal))
(dataList<-list(y=myData$y,Ntotal=length(myData$y)))
jagsModel<-jags.model(file="Tempmodel.txt",data=dataList,n.chains=3,n.adapt=500)
jagsModel<-jags.model(file=paste0(dataPath,"wk4/Tempmodel.txt"),data=dataList,n.chains=3,n.adapt=500)
paste0(dataPath,"wk4/Tempmodel.txt")
jagsModel<-jags.model(file=paste0(dataPath,"wk4/Tempmodel.txt"),data=dataList,n.chains=3,n.adapt=500)
getwd()
jagsModel<-jags.model(file="Tempmodel.txt"),data=dataList,n.chains=3,n.adapt=500)
jagsModel<-jags.model(file="Tempmodel.txt",data=dataList,n.chains=3,n.adapt=500)
y<-myData$y
(Ntotal<-length(y))
modelString="
model {
for (i in 1:length(Ntotal)) {
y[i]~dbern(theta)
}
theta~dbeta(1,1)
}
"
jagsModel<-jags.model(file="Tempmodel.txt",data=dataList,n.chains=3,n.adapt=500)
writeLines(modelString,con=paste0(dataPath,"wk4/Tempmodel.txt"))
jagsModel<-jags.model(file="Tempmodel.txt",data=dataList,n.chains=3,n.adapt=500)
update(jagsModel,n.iter=600)
codaSamples<-coda.samples(jagsModel,variable.names=c("theta"),n.iter=3334)
list.samplers(jagsModel)
head(codaSamples)
summary(codaSamples)
summary(codaSamples)
coda::traceplot(codaSamples)
densplot(codaSamples)
autocorr.plot(codaSamples,ask=F)
effectiveSize(codaSamples)
gelman.diag(codaSamples)
gelman.plot(codaSamples)
lapply(codaSamples,mean)
lapply(codaSamples,mean)
sum(y)/Ntotal
(l<-min(unlist(codaSamples))-.05)
(h<-max(unlist(codaSamples))+.05)
# posterior densities vs theortical
(l<-min(unlist(codaSamples))-.05)
(h<-max(unlist(codaSamples))+.05)
codaSamples
histBreaks<-seq(l,h,by=.05)
postHist<-lapply(codaSamples,hist,breaks=histBreaks)
head(myData)
unique(myData$race)
unique(myData$education)
Nsubj=count(unique(myData$education))
Nsubj=length(unique(myData$education))
(dataList<-list(y=y,s=s,Ntotal=Ntotal,Nsubj=Nsubj))
#string
(s<-as.numeric(myData$race))
Nsubj=length(unique(myData$education))
(dataList<-list(y=y,s=s,Ntotal=Ntotal,Nsubj=Nsubj))
modelString = "
model {
for ( i in 1:Ntotal ) {
y[i] ~ dbern( theta[s[i]] )
}
for ( sIdx in 1:Nsubj ) {      # Different thetas from same prior
theta[sIdx] ~ dbeta( 2 , 2 ) # N.B.: 2,2 prior; change as appropriate.
}
}
" # close quote for modelString
writeLines( modelString , con="TEMPmodel.txt" )
MLE=sum(myData$y)/length(myData$y)
(init1<-MLE)
(init2<-MLE*(1+.01))
(init3<-MLE*(1-.01))
# fx
initsList<-function(){
thetaInit<-sample(c(init1,init2,init3),1,replace=T)
return(list(theta=thetaInit))
}
initsList()
jagsModel<-jags.model(file="TEMPmodel.txt",data=dataList,n.chains=3,n.adapt=500)
as.numeric(myData$race)
unique(as.numeric(myData$race)))
unique(as.numeric(myData$race))
knitr::opts_chunk$set(echo = TRUE)
myData<-read.csv(paste(dataPath,"wk4/z15N50.csv",sep="/"))
head(myData)
myData = read.csv(paste0(dataPath,"wk4/MScA_32014_BayesianMethods_CourseProjectData.csv"))
head(myData)
writeLines( modelString , con="TEMP2model.txt" )
modelString = "
model {
for ( i in 1:Ntotal ) {
y[i] ~ dbern( theta[s[i]] )
}
for ( sIdx in 1:Nsubj ) {      # Different thetas from same prior
theta[sIdx] ~ dbeta( 1 , 1 ) # N.B.: 2,2 prior; change as appropriate.
}
}
" # close quote for modelString
writeLines( modelString , con="TEMP2model.txt" )
MLE=sum(myData$y)/length(myData$y)
(init1<-MLE)
(init2<-MLE*(1+.01))
(init3<-MLE*(1-.01))
# fx
initsList<-function(){
thetaInit<-sample(c(init1,init2,init3),1,replace=T)
return(list(theta=thetaInit))
}
initsList()
jagsModel<-jags.model(file="TEMP2model.txt",data=dataList,n.chains=3,n.adapt=500)
Nsubj
Nsubj=length(unique(myData$education))
Nsubj=length(unique(myData$race))
jagsModel<-jags.model(file="TEMP2model.txt",data=dataList,n.chains=3,n.adapt=500)
modelString = "
model {
for ( i in 1:Ntotal ) {
y[i] ~ dbern( theta[s[i]] )
}
for ( sIdx in 1:Nsubj ) {      # Different thetas from same prior
theta[sIdx] ~ dbeta( 1 , 1 ) # N.B.: 2,2 prior; change as appropriate.
}
}
" # close quote for modelString
writeLines( modelString , con="TEMP2model.txt" )
jagsModel<-jags.model(file="TEMP2model.txt",data=dataList,n.chains=3,n.adapt=500)
Ntotal
theta
s
(s<-as.numeric(myData$race))
unique(myData$race)
Nsubj=length(unique(myData$race))
Nsubj
Nsubj=length(unique(s))
(Nsubj=length(unique(s)))
(dataList<-list(y=y,s=s,Ntotal=Ntotal,Nsubj=Nsubj))
jagsModel<-jags.model(file="TEMP2model.txt",data=dataList,n.chains=3,n.adapt=500)
update(jagsModel,n.iter=600)
codaSamples<-coda.samples(jagsModel,variable.names=c("theta"),n.iter=3334)
list.samplers(jagsModel)
head(codaSamples)
summary(codaSamples)
codaSamples<-coda.samples(jagsModel,variable.names=c("theta"),n.iter=3334)
list.samplers(jagsModel)
head(codaSamples)
summary(codaSamples)
coda::traceplot(codaSamples)
densplot(codaSamples)
unique(myData$race)
autocorr.plot(codaSamples,ask=F)
effectiveSize(codaSamples)
gelman.diag(codaSamples)
gelman.plot(codaSamples)
lapply(codaSamples,mean)
sum(y)/Ntotal
# posterior densities vs theortical
(l<-min(unlist(codaSamples))-.05)
(h<-max(unlist(codaSamples))+.05)
histBreaks<-seq(l,h,by=.05)
postHist<-lapply(codaSamples,hist,breaks=histBreaks)
matrix(unlist(lapply(codaSamples,function(z) apply(z,2,mean))),ncol=3)
plot(density(codaSamples[[1]][,1]),xlim=c(0,1),ylim=c(0,3))
lines(density(codaSamples[[1]][,2]))
lines(density(codaSamples[[2]][,1]),col="orange")
lines(density(codaSamples[[2]][,2]),col="orange")
lines(density(codaSamples[[3]][,1]),col="blue")
lines(density(codaSamples[[3]][,2]),col="blue")
plot(density(codaSamples[[1]][,1]),xlim=c(0,1),ylim=c(0,10))
lines(density(codaSamples[[1]][,2]))
lines(density(codaSamples[[2]][,1]),col="orange")
lines(density(codaSamples[[2]][,2]),col="orange")
lines(density(codaSamples[[3]][,1]),col="blue")
lines(density(codaSamples[[3]][,2]),col="blue")
codaSamples[[1]][,1])
codaSamples[[1]][,1]
density(codaSamples[[1]][,1]
)
plot(density(codaSamples[[1]][,1],xlim=c(0,1),ylim=c(0,150))
lines(density(codaSamples[[2]][,1]),col="orange")
plot(density(codaSamples[[1]][,1],xlim=c(0,1),ylim=c(0,150))
plot(density(codaSamples[[1]][,1]),xlim=c(0,1),ylim=c(0,150))
plot(density(codaSamples[[1]][,1]),xlim=c(0,1),ylim=c(0,150))
lines(density(codaSamples[[1]][,2]))
lines(density(codaSamples[[1]][,3]))
lines(density(codaSamples[[1]][,4]))
lines(density(codaSamples[[2]][,1]),col="orange")
lines(density(codaSamples[[2]][,2]),col="orange")
lines(density(codaSamples[[2]][,3]),col="orange")
lines(density(codaSamples[[2]][,4]),col="orange")
lines(density(codaSamples[[3]][,1]),col="blue")
lines(density(codaSamples[[3]][,2]),col="blue")
lines(density(codaSamples[[3]][,3]),col="blue")
lines(density(codaSamples[[3]][,4]),col="blue")
lines(density(codaSamples[[4]][,1]),col="green")
lines(density(codaSamples[[4]][,2]),col="green")
lines(density(codaSamples[[4]][,3]),col="green")
lines(density(codaSamples[[4]][,4]),col="green")
codaSamples
matrix(unlist(lapply(codaSamples,function(z) apply(z,2,mean))),ncol=3)
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]))))
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2],Theta3=HDIofMCMC(codaSamples[[1]][,3],Theta3=HDIofMCMC(codaSamples[[1]][,3]
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2],Theta3=HDIofMCMC(codaSamples[[1]][,3],Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
)
)
)
)
)
pl
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2],Theta3=HDIofMCMC(codaSamples[[1]][,3],Theta3=HDIofMCMC(codaSamples[[1]][,3]))))))
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
#diff black anmd white
chainDiffs<-lapply(codaSamples,function(z) z[,2]-z[,1])
chainDiffs
(leftBounds<-unlist(lapply(chainDiffs,function(z) HDIofMCMC(z,.95)[1])))
head(chainDiffs[[1]])
(HDIofChainsHierarchi<-lapply(codaSamples,functio cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]))))
(HDIofChainsHierarchi<-lapply(codaSamples,functio cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
(HDIofChainsHierarchi<-lapply(codaSamples,function cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta3=HDIofMCMC(codaSamples[[1]][,3]))))
(HDIofChainsHierarchi<-lapply(codaSamples,function(z) cbind(Theta1=HDIofMCMC(codaSamples[[1]][,1]),                                                   Theta2=HDIofMCMC(codaSamples[[1]][,2]),Theta3=HDIofMCMC(codaSamples[[1]][,3]),Theta4=HDIofMCMC(codaSamples[[1]][,4]))))
#diff black anmd white
chainDiffs<-lapply(codaSamples,function(z) z[,2]-z[,1])
(leftBounds<-unlist(lapply(chainDiffs,function(z) HDIofMCMC(z,.95)[1])))
unique(myData$race)
modelString = "
model {
for ( i in 1:Ntotal ) {
y[i] ~ dbern( theta[s[i]] )
}
for ( sIdx in 1:Nsubj ) {      # Different thetas from same prior
theta[sIdx] ~ dbeta( 2 , 2 ) # N.B.: 2,2 prior; change as appropriate.
}
}
" # close quote for modelString
writeLines( modelString , con="TEMP3model.txt" )
MLE=sum(myData$y)/length(myData$y)
(init1<-MLE)
(init2<-MLE*(1+.01))
(init3<-MLE*(1-.01))
(init2<-MLE*(1+.5))
(init3<-MLE*(1-.5))
# fx
initsList<-function(){
thetaInit<-sample(c(init1,init2,init3),1,replace=T)
return(list(theta=thetaInit))
}
initsList()
jagsModel<-jags.model(file="TEMP3model.txt",data=dataList,n.chains=3,n.adapt=500)
update(jagsModel,n.iter=600)
codaSamples2<-coda.samples(jagsModel,variable.names=c("theta"),n.iter=3334)
list.samplers(jagsModel)
head(codaSamples2)
summary(codaSamples2)
summary(codaSamples)
summary(codaSamples2)
coda::traceplot(codaSamples2)
densplot(codaSamples2)
autocorr.plot(codaSamples2,ask=F)
effectiveSize(codaSamples2)
gelman.diag(codaSamples2)
gelman.plot(codaSamples2)
matrix(unlist(lapply(codaSamples2,function(z) apply(z,2,mean))),ncol=3)
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,150))
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
lines(density(codaSamples2[[1]][,4]))
lines(density(codaSamples2[[2]][,1]),col="orange")
lines(density(codaSamples2[[2]][,2]),col="orange")
lines(density(codaSamples2[[2]][,3]),col="orange")
lines(density(codaSamples2[[3]][,1]),col="blue")
lines(density(codaSamples2[[2]][,4]),col="orange")
lines(density(codaSamples2[[3]][,3]),col="blue")
lines(density(codaSamples2[[3]][,2]),col="blue")
lines(density(codaSamples2[[3]][,4]),col="blue")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,150))
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
lines(density(codaSamples2[[1]][,4]))
lines(density(codaSamples2[[2]][,1]),col="orange")
lines(density(codaSamples2[[2]][,2]),col="orange")
lines(density(codaSamples2[[2]][,3]),col="orange")
lines(density(codaSamples2[[2]][,4]),col="orange")
lines(density(codaSamples2[[3]][,1]),col="blue")
lines(density(codaSamples2[[1]][,1]),col="blue",lty="dotted")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,150))
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
lines(density(codaSamples2[[1]][,4]))
lines(density(codaSamples[[1]][,1]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,2]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,3]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,4]),col="blue",lty="dotted")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,125))
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
lines(density(codaSamples[[1]][,1]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,2]),col="blue",lty="dotted")
lines(density(codaSamples2[[1]][,4]))
lines(density(codaSamples[[1]][,3]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,4]),col="blue",lty="dotted")
title("Desntiy comparison of thetas, blue is second")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,125))
title("Desntiy comparison of thetas, blue is second")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,125),main = "Desntiy comparison of thetas, blue is second")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,125),main = "Desntiy comparison of thetas, blue is second")
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
lines(density(codaSamples2[[1]][,4]))
lines(density(codaSamples[[1]][,2]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,3]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,1]),col="blue",lty="dotted")
lines(density(codaSamples[[1]][,4]),col="blue",lty="dotted")
plot(density(codaSamples2[[1]][,1]),xlim=c(0,1),ylim=c(0,125),main = "Density comparison of thetas, blue is second")
lines(density(codaSamples2[[1]][,2]))
lines(density(codaSamples2[[1]][,3]))
